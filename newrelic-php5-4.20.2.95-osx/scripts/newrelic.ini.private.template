;
; This file contains the various private control knobs for the agent.
; These knobs are private to New Relic, although an enterprising customer could figure these out.
;
; This file is not distributed to customers, but is here to document things developers may find useful.
; The flags described in this document are NOT described in publically facing documentation.
;

[newrelic]

;
; Setting: newrelic.feature_flag
; Type   : string
; Scope  : system
; Default: none
; Info   : Enables experimental features within the PHP agent. These flags are
;          used to allow testing of features that may be provided in future
;          versions of the agent. Please note that we may be unable to provide
;          support for experimental features.
;
;          Some flags may be made public, in which case they will also be
;          listed in newrelic.ini.template.
;
;          Current flags:
;
;          - guzzle: This enables enhanced support for instrumenting external
;                    calls made with versions 3 and 4 of the Guzzle library.
;                    Enabling this may cause issues with your overview charts
;                    in APM, particularly when multiple requests are sent
;                    simultaneously.
;
;newrelic.feature_flag = ""

;
; Setting: newrelic.special
; Type   : list of members of enumeration
; Scope  : system
; Default: empty set
; Info   : Set special boolean flags to control the agent.
;          The value of this is a comma separated list of names taken from the following set; white space is ignored
;            no_sql_parsing
;            show_sql_parsing  (watch out: leaves unobfuscated SQL in the agent log file)
;            enable_path_translated
;            no_background_jobs
;            show_executes
;            show_execute_params
;            show_execute_stack
;            show_execute_returns
;            show_executes_untrimmed
;            no_signal_handler
;            debug_autorum
;            show_loaded_files
;
;;;newrelic.special = show_executes, show_execute_params, show_execute_stack, show_execute_returns, show_executes_untrimmed

;
; Setting: newrelic.daemon.special.curl_verbose
; Type   : boolean
; Scope  : system
; Default: false
; Info   : Enable logging (at the verbosedebug level) of all of curl's verbose
;          logging. This behaviour is useful when debugging connection-related
;          support issues, but does generate a frightful volume of log
;          messages (minimally 4kB per app per minute, assuming no activity at
;          all).
;
;newrelic.daemon.special.curl_verbose = false

;
; Setting: newrelic.daemon.special.integration
; Type   : boolean
; Scope  : system
; Default: false
; Info   : Enable special integration behavior for testing.  The agent will retry some things,
;          and the daemon will generate extra tagged log file messages containing the json
;          it otherwise sends to the collector.  This behavior is useful for doing system integration tests.
;
;newrelic.daemon.special.integration = false

;
; Setting: newrelic.special.disable_instrumentation
; Type   : boolean
; Scope  : system
; Default: false
; Info   : Disable instrumentation.
;
;newrelic.special.disable_instrumentation = false

;
; Setting: newrelic.special.expensive_node_min
; Type   : integer (time in msec)
; Scope  : system
; Default: 2 * NR_TIME_DIVISOR_MS
; Info   : Sets the threshold for expensive transactions.
;
;newrelic.special.expensive_node_min=0

;
; Setting: newrelic.special.max_nesting_level
; Type   : integer in the range -1 - 100000
; Scope  : per-directory
; Default: -1
; Info   : The maximum depth of the PHP call stack, in frames.
;          Any deeper levels of PHP calls will be treated
;          as a fatal PHP internal error (PHP E_ERROR) and the PHP execution will exit
;          with a process exit code of 255.  No exception will be thrown, and
;          the running PHP program will be unaware of the cause of its demise.
;          A value of -1 or 0 will disable stack depth checking (new default as of Release 4.8).
;
;newrelic.special.max_nesting_level = -1

;
; Setting: newrelic.special.enable_extension_instrumentation
; Type   : boolean
; Scope  : system
; Default: false
; Info   : Enables extension instrumentation, which at present consists of
;          timing each RSHUTDOWN function that runs and creating transaction
;          trace nodes based on those times.
;
;newrelic.special.enable_extension_instrumentation = false

;
; Setting: newrelic.browser_monitoring.debug
; Type   : boolean
; Scope  : per-directory
; Default: false
; Info   : Indicates whether the Javascript browser monitoring loader returned
;          by the collector should include debug functionality.  This setting
;          will not take effect until the newrelic-daemon has been restarted.
;
;newrelic.browser_monitoring.debug = false

;
; Setting: newrelic.browser_monitoring.loader
; Type   : string
; Scope  : per-directory
; Default: "rum"
; Info   : Indicates the type of Javascript browser monitoring loader that
;          should be returned by the collector during connection.  This setting
;          will not take effect until the newrelic-daemon has been restarted.
;
;newrelic.browser_monitoring.loader = "rum"

;
; Setting: newrelic.capture_params
; Info   : This setting has been deprecated.
;          It was formerly used to capture request parameters.
;          It has been replaced by the attribute configuration settings.
;          To replicate this setting with the new settings, one would use:
;
;          newrelic.transaction_tracer.attributes.include = request.parameters.*
;          newrelic.error_collector.attributes.include = request.parameters.*
;          
;          Please refer to the attribute configuration options for more
;          information.

;
; Setting: newrelic.ignored_params
; Info   : This setting has been deprecated.
;          It was formerly used to filter request parameters.
;          It has been replaced by the attribute configuration settings.
;          If you would like to exclude the request parameter 'alpha', use:
;
;          newrelic.attributes.exclude = request.parameters.alpha
;
;          Please refer to the attribute configuration options for more
;          information.
